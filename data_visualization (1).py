# -*- coding: utf-8 -*-
"""Data Visualization

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P3EeJ1sR-xvyfChq1sK4o0wDn_eEBWfE

##Python Assignments

## Matplotlib

1. We have the min and max temperatures in a city In India for each months of the year. We would like to find a function to describe this and show it graphically, the dataset given below.

Task:

i.fitting it to the periodic function

ii.plot the fit

Data
Max = 39, 41, 43, 47, 49, 51, 45, 38, 37, 29, 27, 25

Min = 21, 23, 27, 28, 32, 35, 31, 28, 21, 19, 17, 18
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Define the periodic function
def periodic_func(x, a, b, c, d):
    return a * np.sin(b * x + c) + d

months = np.arange(12)
max_temps = np.array([39, 41, 43, 47, 49, 51, 45, 38, 37, 29, 27, 25])
min_temps = np.array([21, 23, 27, 28, 32, 35, 31, 28, 21, 19, 17, 18])

max_params, _ = curve_fit(periodic_func, months, max_temps)
min_params, _ = curve_fit(periodic_func, months, min_temps)

x_vals = np.linspace(0, 11, 100)
max_curve = periodic_func(x_vals, *max_params)
min_curve = periodic_func(x_vals, *min_params)

fig, ax = plt.subplots()
ax.plot(months, max_temps, 'ro')
ax.plot(x_vals, max_curve, 'r-')
ax.plot(months, min_temps, 'bo')
ax.plot(x_vals, min_curve, 'b-')
ax.set_xlabel('Month')
ax.set_ylabel('Temperature (Â°C)')
ax.legend()

plt.show()

"""2. This assignment is for visualization using matplotlib:
data to use:

url=https://raw.githubusercontent.com/Geoyi/Cleaning-Titanic-Data/master/titanic_original.csv

titanic = pd.read_csv(url)

Charts to plot:

i. Create a pie chart presenting the male/female proportion

ii. Create a scatterplot with the Fare paid and the Age, differ the plot color by gender
"""

import pandas as pd
import matplotlib.pyplot as plt

# Load the Titanic dataset
url = 'https://raw.githubusercontent.com/Geoyi/Cleaning-Titanic-Data/master/titanic_original.csv'
titanic = pd.read_csv(url)

# Create a pie chart presenting the male/female proportion
gender_counts = titanic['sex'].value_counts()
plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%')
plt.title('Male/Female Proportion')
plt.show()

colors = {'male': 'blue', 'female': 'red'}
plt.scatter(titanic['age'], titanic['fare'], c=titanic['sex'].apply(lambda x: colors[x]))
plt.xlabel('Age')
plt.ylabel('Fare')
plt.title('Fare Paid vs Age (by Gender)')
plt.show()

